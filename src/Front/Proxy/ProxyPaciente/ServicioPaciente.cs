//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.4927
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

namespace Proxy.ProxyPaciente
{ // 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServicioPacienteSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Entidad))]
    public partial class ServicioPaciente : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
        private System.Threading.SendOrPostCallback AgregarPacienteOperationCompleted;
    
        private System.Threading.SendOrPostCallback ValidarPacienteExistenteOperationCompleted;
    
        private System.Threading.SendOrPostCallback ObtenerInformacionPacienteOperationCompleted;
    
        private System.Threading.SendOrPostCallback EditarPacienteOperationCompleted;
    
        private System.Threading.SendOrPostCallback ObtenerCirugiasPacienteOperationCompleted;
    
        /// <remarks/>
        public ServicioPaciente() {
            this.Url = "http://192.168.1.109/ServiciosCeclimi/ServicioPaciente.asmx";
        }
    
        /// <remarks/>
        public event AgregarPacienteCompletedEventHandler AgregarPacienteCompleted;
    
        /// <remarks/>
        public event ValidarPacienteExistenteCompletedEventHandler ValidarPacienteExistenteCompleted;
    
        /// <remarks/>
        public event ObtenerInformacionPacienteCompletedEventHandler ObtenerInformacionPacienteCompleted;
    
        /// <remarks/>
        public event EditarPacienteCompletedEventHandler EditarPacienteCompleted;
    
        /// <remarks/>
        public event ObtenerCirugiasPacienteCompletedEventHandler ObtenerCirugiasPacienteCompleted;
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AgregarPaciente", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AgregarPaciente(Paciente paciente) {
            object[] results = this.Invoke("AgregarPaciente", new object[] {
                                                                               paciente});
            return ((bool)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BeginAgregarPaciente(Paciente paciente, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AgregarPaciente", new object[] {
                                                                        paciente}, callback, asyncState);
        }
    
        /// <remarks/>
        public bool EndAgregarPaciente(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
    
        /// <remarks/>
        public void AgregarPacienteAsync(Paciente paciente) {
            this.AgregarPacienteAsync(paciente, null);
        }
    
        /// <remarks/>
        public void AgregarPacienteAsync(Paciente paciente, object userState) {
            if ((this.AgregarPacienteOperationCompleted == null)) {
                this.AgregarPacienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAgregarPacienteOperationCompleted);
            }
            this.InvokeAsync("AgregarPaciente", new object[] {
                                                                 paciente}, this.AgregarPacienteOperationCompleted, userState);
        }
    
        private void OnAgregarPacienteOperationCompleted(object arg) {
            if ((this.AgregarPacienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AgregarPacienteCompleted(this, new AgregarPacienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidarPacienteExistente", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ValidarPacienteExistente(int cedula) {
            object[] results = this.Invoke("ValidarPacienteExistente", new object[] {
                                                                                        cedula});
            return ((int)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BeginValidarPacienteExistente(int cedula, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidarPacienteExistente", new object[] {
                                                                                 cedula}, callback, asyncState);
        }
    
        /// <remarks/>
        public int EndValidarPacienteExistente(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
    
        /// <remarks/>
        public void ValidarPacienteExistenteAsync(int cedula) {
            this.ValidarPacienteExistenteAsync(cedula, null);
        }
    
        /// <remarks/>
        public void ValidarPacienteExistenteAsync(int cedula, object userState) {
            if ((this.ValidarPacienteExistenteOperationCompleted == null)) {
                this.ValidarPacienteExistenteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidarPacienteExistenteOperationCompleted);
            }
            this.InvokeAsync("ValidarPacienteExistente", new object[] {
                                                                          cedula}, this.ValidarPacienteExistenteOperationCompleted, userState);
        }
    
        private void OnValidarPacienteExistenteOperationCompleted(object arg) {
            if ((this.ValidarPacienteExistenteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidarPacienteExistenteCompleted(this, new ValidarPacienteExistenteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerInformacionPaciente", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Paciente ObtenerInformacionPaciente(int cedula) {
            object[] results = this.Invoke("ObtenerInformacionPaciente", new object[] {
                                                                                          cedula});
            return ((Paciente)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BeginObtenerInformacionPaciente(int cedula, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ObtenerInformacionPaciente", new object[] {
                                                                                   cedula}, callback, asyncState);
        }
    
        /// <remarks/>
        public Paciente EndObtenerInformacionPaciente(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Paciente)(results[0]));
        }
    
        /// <remarks/>
        public void ObtenerInformacionPacienteAsync(int cedula) {
            this.ObtenerInformacionPacienteAsync(cedula, null);
        }
    
        /// <remarks/>
        public void ObtenerInformacionPacienteAsync(int cedula, object userState) {
            if ((this.ObtenerInformacionPacienteOperationCompleted == null)) {
                this.ObtenerInformacionPacienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnObtenerInformacionPacienteOperationCompleted);
            }
            this.InvokeAsync("ObtenerInformacionPaciente", new object[] {
                                                                            cedula}, this.ObtenerInformacionPacienteOperationCompleted, userState);
        }
    
        private void OnObtenerInformacionPacienteOperationCompleted(object arg) {
            if ((this.ObtenerInformacionPacienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ObtenerInformacionPacienteCompleted(this, new ObtenerInformacionPacienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditarPaciente", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EditarPaciente(Paciente paciente) {
            object[] results = this.Invoke("EditarPaciente", new object[] {
                                                                              paciente});
            return ((bool)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BeginEditarPaciente(Paciente paciente, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EditarPaciente", new object[] {
                                                                       paciente}, callback, asyncState);
        }
    
        /// <remarks/>
        public bool EndEditarPaciente(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
    
        /// <remarks/>
        public void EditarPacienteAsync(Paciente paciente) {
            this.EditarPacienteAsync(paciente, null);
        }
    
        /// <remarks/>
        public void EditarPacienteAsync(Paciente paciente, object userState) {
            if ((this.EditarPacienteOperationCompleted == null)) {
                this.EditarPacienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditarPacienteOperationCompleted);
            }
            this.InvokeAsync("EditarPaciente", new object[] {
                                                                paciente}, this.EditarPacienteOperationCompleted, userState);
        }
    
        private void OnEditarPacienteOperationCompleted(object arg) {
            if ((this.EditarPacienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditarPacienteCompleted(this, new EditarPacienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerCirugiasPaciente", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Paciente[] ObtenerCirugiasPaciente(int cedula) {
            object[] results = this.Invoke("ObtenerCirugiasPaciente", new object[] {
                                                                                       cedula});
            return ((Paciente[])(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BeginObtenerCirugiasPaciente(int cedula, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ObtenerCirugiasPaciente", new object[] {
                                                                                cedula}, callback, asyncState);
        }
    
        /// <remarks/>
        public Paciente[] EndObtenerCirugiasPaciente(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Paciente[])(results[0]));
        }
    
        /// <remarks/>
        public void ObtenerCirugiasPacienteAsync(int cedula) {
            this.ObtenerCirugiasPacienteAsync(cedula, null);
        }
    
        /// <remarks/>
        public void ObtenerCirugiasPacienteAsync(int cedula, object userState) {
            if ((this.ObtenerCirugiasPacienteOperationCompleted == null)) {
                this.ObtenerCirugiasPacienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnObtenerCirugiasPacienteOperationCompleted);
            }
            this.InvokeAsync("ObtenerCirugiasPaciente", new object[] {
                                                                         cedula}, this.ObtenerCirugiasPacienteOperationCompleted, userState);
        }
    
        private void OnObtenerCirugiasPacienteOperationCompleted(object arg) {
            if ((this.ObtenerCirugiasPacienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ObtenerCirugiasPacienteCompleted(this, new ObtenerCirugiasPacienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Paciente : Persona {
    
        private System.DateTime fechaIngresoField;
    
        private string telefonoMovilField;
    
        /// <comentarios/>
        public System.DateTime FechaIngreso {
            get {
                return this.fechaIngresoField;
            }
            set {
                this.fechaIngresoField = value;
            }
        }
    
        /// <comentarios/>
        public string TelefonoMovil {
            get {
                return this.telefonoMovilField;
            }
            set {
                this.telefonoMovilField = value;
            }
        }
    }

    /// <comentarios/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Paciente))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Persona : Entidad {
    
        private long cedulaField;
    
        private string segundoNombreField;
    
        private string primerApellidoField;
    
        private string segundoApellidoField;
    
        private string telefonoField;
    
        private string correoField;
    
        /// <comentarios/>
        public long Cedula {
            get {
                return this.cedulaField;
            }
            set {
                this.cedulaField = value;
            }
        }
    
        /// <comentarios/>
        public string SegundoNombre {
            get {
                return this.segundoNombreField;
            }
            set {
                this.segundoNombreField = value;
            }
        }
    
        /// <comentarios/>
        public string PrimerApellido {
            get {
                return this.primerApellidoField;
            }
            set {
                this.primerApellidoField = value;
            }
        }
    
        /// <comentarios/>
        public string SegundoApellido {
            get {
                return this.segundoApellidoField;
            }
            set {
                this.segundoApellidoField = value;
            }
        }
    
        /// <comentarios/>
        public string Telefono {
            get {
                return this.telefonoField;
            }
            set {
                this.telefonoField = value;
            }
        }
    
        /// <comentarios/>
        public string Correo {
            get {
                return this.correoField;
            }
            set {
                this.correoField = value;
            }
        }
    }

    /// <comentarios/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Persona))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Paciente))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class Entidad {
    
        private long idField;
    
        private string nombreField;
    
        /// <comentarios/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    
        /// <comentarios/>
        public string Nombre {
            get {
                return this.nombreField;
            }
            set {
                this.nombreField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void AgregarPacienteCompletedEventHandler(object sender, AgregarPacienteCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AgregarPacienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
        private object[] results;
    
        internal AgregarPacienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
            this.results = results;
            }
    
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void ValidarPacienteExistenteCompletedEventHandler(object sender, ValidarPacienteExistenteCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidarPacienteExistenteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
        private object[] results;
    
        internal ValidarPacienteExistenteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
            this.results = results;
            }
    
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void ObtenerInformacionPacienteCompletedEventHandler(object sender, ObtenerInformacionPacienteCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ObtenerInformacionPacienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
        private object[] results;
    
        internal ObtenerInformacionPacienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
            this.results = results;
            }
    
        /// <remarks/>
        public Paciente Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Paciente)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void EditarPacienteCompletedEventHandler(object sender, EditarPacienteCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditarPacienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
        private object[] results;
    
        internal EditarPacienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
            this.results = results;
            }
    
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void ObtenerCirugiasPacienteCompletedEventHandler(object sender, ObtenerCirugiasPacienteCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ObtenerCirugiasPacienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
        private object[] results;
    
        internal ObtenerCirugiasPacienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
            this.results = results;
            }
    
        /// <remarks/>
        public Paciente[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Paciente[])(this.results[0]));
            }
        }
    }
}