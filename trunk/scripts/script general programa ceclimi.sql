/* Script de crear la base de datos */

CREATE TABLE `cirugia` (
  `CI_ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `CI_NOMBRE` varchar(15) NOT NULL,
  `CI_DESCRIPCION` varchar(200) NOT NULL,
  `CI_STATUS` int(11) DEFAULT '1',
  PRIMARY KEY (`CI_ID`)
);

CREATE TABLE `cirugia_cirujano` (
  `CC_ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `CC_HONORARIOS` float(12,2) DEFAULT NULL,
  `CC_FK_CIRUJANO` bigint(20) NOT NULL,
  `CC_FK_CIRUGIA` bigint(20) NOT NULL,
  `CC_STATUS` int(11) DEFAULT '1',
  PRIMARY KEY (`CC_ID`)
);

 CREATE TABLE `cirugia_paquete_f` (
  `CP_ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `CP_MONTO_PROTESIS` float(12,2) NOT NULL,
  `CP_FECHA_OPERACION` date NOT NULL,
  `CP_DESCUENTO` int(11) NOT NULL,
  `CP_MONTO_CIRUJANO` float(12,2) NOT NULL,
  `CP_CIRUGIA_FK` bigint(20) NOT NULL,
  `PF_CIRUJANO_FK` bigint(20) DEFAULT NULL,
  `CP_PAQUETEF_FK` bigint(20) NOT NULL,
  `CP_STATUS` int(11) DEFAULT '1',
  PRIMARY KEY (`CP_ID`)
);

CREATE TABLE `cirujano` (
  `AU_CI` bigint(20) NOT NULL AUTO_INCREMENT,
  `AU_PRIMER_NOMBRE` varchar(30) NOT NULL,
  `AU_SEGUNDO_NOMBRE` varchar(30) DEFAULT NULL,
  `AU_PRIMER_APELLIDO` varchar(30) NOT NULL,
  `AU_SEGUNDO_APELLIDO` varchar(30) DEFAULT NULL,
  `AU_TELEFONO_MOVIL` varchar(10) NOT NULL,
  `AU_TELEFONO_FIJO` varchar(10) DEFAULT NULL,
  `AU_CORREO` varchar(100) NOT NULL,
  `AU_STATUS` int(11) DEFAULT '1',
  PRIMARY KEY (`AU_CI`)
) ;

CREATE TABLE `paciente` (
  `PA_CI` bigint(20) NOT NULL AUTO_INCREMENT,
  `PA_PRIMER_NOMBRE` varchar(15) NOT NULL,
  `PA_SEGUNDO_NOMBRE` varchar(15) DEFAULT NULL,
  `PA_PRIMER_APELLIDO` varchar(15) NOT NULL,
  `PA_SEGUNDO_APELLIDO` varchar(15) DEFAULT NULL,
  `PA_TELEFONO_FIJO` varchar(10) DEFAULT NULL,
  `PA_TELEFONO_MOVIL` varchar(10) DEFAULT NULL,
  `PA_CORREO` varchar(100) DEFAULT NULL,
  `PA_FECHA_INGRESO` date NOT NULL,
  `PA_STATUS` int(11) DEFAULT '1',
  PRIMARY KEY (`PA_CI`)
);

CREATE TABLE `pagos` (
  `PA_ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `PA_MONTO` float(12,2) NOT NULL,
  `PA_NOMBRE` varchar(15) NOT NULL,
  `PA_FECHA` date NOT NULL,
  `PA_SEGURO` varchar(30) NOT NULL,
  `PA_TIPO_PAGO` varchar(3) NOT NULL,
  `PA_PACIENTE_FK` bigint(20) NOT NULL,
  `PA_STATUS` int(11) DEFAULT '1',
  PRIMARY KEY (`PA_ID`)
);

CREATE TABLE `paquete_financiero` (
  `PF_ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `PF_FECHA_PAQUETE` date NOT NULL,
  `PF_FECHA_LIMITE` date NOT NULL,
  `PF_PACIENTE_FK` bigint(20) DEFAULT NULL,
  `PF_STATUS` int(11) DEFAULT '1',
  PRIMARY KEY (`PF_ID`)
);

CREATE TABLE `personal_cirugia` (
  `PC_ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `PC_CIRUGIA_PAQUETE_FK` bigint(20) DEFAULT NULL,
  `PC_PERSONAL_FK` bigint(20) DEFAULT NULL,
  `PC_ESPECIALIZACION` varchar(50) NOT NULL,
  `PC_STATUS` int(11) DEFAULT '1',
  PRIMARY KEY (`PC_ID`)
);

CREATE TABLE `personal_quirurjico` (
  `PQ_CI` bigint(20) NOT NULL AUTO_INCREMENT,
  `PQ_PRIMER_NOMBRE` varchar(30) NOT NULL,
  `PQ_SEGUNDO_NOMBRE` varchar(30) DEFAULT NULL,
  `PQ_PRIMER_APELLIDO` varchar(30) NOT NULL,
  `PQ_SEGUNDO_APELLIDO` varchar(30) DEFAULT NULL,
  `PQ_ESPECIALIZACION` varchar(50) NOT NULL,
  `PQ_TELEFONO_FIJO` varchar(10) DEFAULT NULL,
  `PQ_CORREO` varchar(100) NOT NULL,
  `PQ_STATUS` int(11) DEFAULT '1',
  PRIMARY KEY (`PQ_CI`)
);

CREATE TABLE `transferencia` (
  `TR_ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `TR_MONTO` float(12,2) NOT NULL,
  `TR_PACIENTE_OTORGA_FK` bigint(20) NOT NULL,
  `TR_PACIENTE_RECIBE_FK` bigint(20) NOT NULL,
  `TR_STATUS` int(11) DEFAULT '1',
  PRIMARY KEY (`TR_ID`)
);

CREATE TABLE `usuario` (
  `US_CI` bigint(20) NOT NULL AUTO_INCREMENT,
  `US_NOMBRE` varchar(15) DEFAULT NULL,
  `US_APELLIDO` varchar(15) DEFAULT NULL,
  `US_USUARIO` varchar(10) DEFAULT NULL,
  `US_CONTRASENA` varchar(10) DEFAULT NULL,
  `US_STATUS` int(11) DEFAULT '1',
  PRIMARY KEY (`US_CI`)
);

/* Funciones SQL */

CREATE   PROCEDURE `EliminarCirugia`(IN `ID` bigint)
BEGIN
	UPDATE cirugia SET CI_STATUS=0
where CI_ID=ID;

END

CREATE   PROCEDURE `EliminarCirugiaCirujano`(IN `ID` bigint)
BEGIN
	UPDATE cirugia_cirujano SET CC_STATUS=0
WHERE CC_ID=ID;

END

CREATE   PROCEDURE `EliminarCirugiaPaqueteF`(IN `ID` bigint)
BEGIN
	UPDATE cirugia_paquete_f SET CP_STATUS=0 WHERE CP_ID=ID;
	update personal_cirugia set PC_STATUS=0 where PC_CIRUGIA_PAQUETE_FK=ID;
END

CREATE   PROCEDURE `EliminarCirujano`(IN `ID` bigint)
BEGIN
	UPDATE cirujano SET AU_STATUS=0
WHERE AU_CI=ID;

END

CREATE   PROCEDURE `EliminarPaciente`(IN `ID` bigint)
BEGIN
	UPDATE paciente SET PA_STATUS=0 
WHERE PA_CI=ID;
END

CREATE   PROCEDURE `EliminarPago`(IN `ID` bigint)
BEGIN
	UPDATE pagos SET  PA_STATUS=0
WHERE PA_ID=ID;

END

CREATE   PROCEDURE `EliminarPaqueteFinanciero`(IN `ID` bigint)
BEGIN
	UPDATE paquete_financiero SET PF_STATUS=0
WHERE PF_ID=ID; 
END

CREATE   PROCEDURE `EliminarPersonalCirugia`(IN `ID` bigint)
BEGIN
	UPDATE personal_cirugia SET PC_STATUS=0
WHERE PC_ID=ID;

END

CREATE   PROCEDURE `EliminarPersonalQuirurgico`(IN `CI` bigint)
BEGIN
	UPDATE personal_quirurjico SET PQ_STATUS=0
WHERE PQ_CI=CI;

END

CREATE   PROCEDURE `EliminarTransferencia`(IN `ID` bigint)
BEGIN
	UPDATE transferencia SET TR_STATUS=0
WHERE TR_ID=ID;

END

CREATE   PROCEDURE `EliminarUsuario`(IN `CI` bigint)
BEGIN
	UPDATE usuario SET US_STATUS=0
WHERE US_CI=CI;
END

CREATE   PROCEDURE `InsertarCirugia`(IN `NOMBRE` varchar(15),IN `DESCRIPCION` varchar(15))
    DETERMINISTIC
BEGIN
	INSERT INTO cirugia (CI_NOMBRE,CI_DESCRIPCION) VALUES (NOMBRE,DESCRIPCION);
END

CREATE   PROCEDURE `InsertarCirugiaCirujano`(IN `HONORARIOS` float,IN `CIRUJANO` bigint,IN `CIRUGIA` bigint)
BEGIN
	INSERT INTO cirugia_cirujano (CC_HONORARIOS,CC_FK_CIRUJANO,CC_FK_CIRUGIA) VALUES (HONORARIOS,CIRUJANO,CIRUGIA);
END

CREATE   PROCEDURE `InsertarCirugiaPaqueteF`(IN  `PROTESIS` float, IN `FECHA_OPERACION` date,IN `DESCUENTO` FLOAT(12,2),IN `MONTO_CIRUJANO` FLOAT(12,2),IN `CIRUGIA` bigint,IN `CIRUJANO` bigint,IN `PAQUETE` bigint, OUT `MAX_ID` bigint)
BEGIN
	INSERT INTO cirugia_paquete_f (CP_MONTO_PROTESIS,CP_FECHA_OPERACION,CP_DESCUENTO,CP_MONTO_CIRUJANO,CP_CIRUGIA_FK,PF_CIRUJANO_FK,CP_PAQUETEF_FK) VALUES (PROTESIS,FECHA_OPERACION,DESCUENTO,MONTO_CIRUJANO,CIRUGIA,CIRUJANO,PAQUETE);
	select MAX(CP_ID) into max_id from cirugia_paquete_f;
END

CREATE   PROCEDURE `Insertarcirujano`(IN `CEDULA` bigint,IN `PRIMERNOMBRE` varchar(30),IN `SEGUNDONOMBRE` varchar(30),IN `PRIMERAPELLIDO` varchar(30),IN `SEGUNDOAPELLIDO` varchar(30),IN `TELEFONOMOVIL` varchar(30),IN `TELEFONOFIJO` varchar(30),IN `CORREO` varchar(30))
BEGIN
	INSERT INTO cirujano (AU_CI,AU_PRIMER_NOMBRE,AU_SEGUNDO_NOMBRE,AU_PRIMER_APELLIDO,
AU_SEGUNDO_APELLIDO,AU_TELEFONO_MOVIL,AU_TELEFONO_FIJO,AU_CORREO) 
VALUES (CEDULA, PRIMERNOMBRE, SEGUNDONOMBRE, PRIMERAPELLIDO, 
SEGUNDOAPELLIDO, TELEFONOMOVIL, TELEFONOFIJO, CORREO);

END

CREATE   PROCEDURE `InsertarPaciente`(IN `CEDULA` bigint,IN `PRIMERNOMBRE` varchar(20),IN `SEGUNDONOMBRE` varchar(20),IN `PRIMERAPELLIDO` varchar(20),IN `SEGUNDOAPELLIDO` varchar(20),IN `TELEFONOFIJO` varchar(10),IN `TELEFONOMOVIL` varchar(10),IN `CORREO` varchar(20),IN `FECHA_INGRESO` date)
BEGIN
	INSERT INTO paciente (PA_CI,PA_PRIMER_NOMBRE,PA_SEGUNDO_NOMBRE,
PA_PRIMER_APELLIDO,PA_SEGUNDO_APELLIDO, PA_TELEFONO_FIJO,
PA_TELEFONO_MOVIL,PA_CORREO,PA_FECHA_INGRESO) 
VALUES (CEDULA, PRIMERNOMBRE, SEGUNDONOMBRE, 
PRIMERAPELLIDO, SEGUNDOAPELLIDO, TELEFONOFIJO,
 TELEFONOMOVIL, CORREO, FECHA_INGRESO );

END

CREATE   PROCEDURE `InsertarPago`(IN `IDPAGO` bigint,IN `MONTO` float(12,2),IN `NOMBRE` varchar(45),IN `FECHA` DATE,IN `SEGURO` VARCHAR(30), IN `TIPO_PAGO` VARCHAR(3),IN `PACIENTE` varchar(45))
BEGIN
	INSERT INTO pagos (PA_ID,PA_MONTO,PA_NOMBRE,PA_FECHA,PA_SEGURO,PA_TIPO_PAGO,PA_PACIENTE_FK) VALUES (IDPAGO,MONTO,NOMBRE,FECHA,SEGURO,TIPO_PAGO,PACIENTE);
END

CREATE   PROCEDURE `InsertarPaqueteFinanciero`(IN `FECHA_PAQUETE` date,IN `PACIENTE` bigint,OUT `idMax` bigint)
    DETERMINISTIC
BEGIN
	INSERT INTO paquete_financiero (PF_FECHA_PAQUETE,PF_FECHA_LIMITE,PF_PACIENTE_FK) VALUES (FECHA_PAQUETE,ADDDATE(FECHA_PAQUETE,180),PACIENTE);
  select MAX(PF_ID) into idMax from paquete_financiero;
END

CREATE   PROCEDURE `InsertarPersonalCirugia`(IN `CIRUGIA_PAQUETE` bigint,IN `PERSONAL` bigint, IN `ESPECIALIZACION` varchar(50))
BEGIN
	INSERT INTO personal_cirugia (PC_CIRUGIA_PAQUETE_FK,PC_PERSONAL_FK,PC_ESPECIALIZACION) VALUES (CIRUGIA_PAQUETE, PERSONAL,ESPECIALIZACION);

END

CREATE   PROCEDURE `InsertarPersonalQuirurgico`(IN `CEDULA` bigint,IN `PRIMERNOMBRE` varchar(30),IN `SEGUNDONOMBRE` varchar(30),IN `PRIMERAPELLIDO` varchar(30),IN `SEGUNDOAPELLIDO` varchar(30),IN `ESPECIALIZACION` varchar(10),IN `TELEFONO` varchar(10),IN `CORREO` varchar(30))
BEGIN
	INSERT INTO personal_quirurjico (PQ_CI,PQ_PRIMER_NOMBRE,PQ_SEGUNDO_NOMBRE,PQ_PRIMER_APELLIDO,PQ_SEGUNDO_APELLIDO,PQ_ESPECIALIZACION,PQ_TELEFONO_FIJO,PQ_CORREO) 
VALUES (CEDULA, PRIMERNOMBRE,SEGUNDONOMBRE,PRIMERAPELLIDO,SEGUNDOAPELLIDO,ESPECIALIZACION,TELEFONO,CORREO);

END

CREATE   PROCEDURE `InsertarTransferencia`(IN `MONTO` float,IN `PACIENTE_OTORGA` bigint,IN `PACIENTE_RECIBE` bigint)
BEGIN
	INSERT INTO transferencia (TR_MONTO,TR_PACIENTE_OTORGA_FK,TR_PACIENTE_RECIBE_FK) VALUES (MONTO,PACIENTE_OTORGA,PACIENTE_RECIBE);

END

CREATE   PROCEDURE `InsertarUsuario`(IN `CEDULA` bigint,IN `NOMBRE` varchar(15),IN `APELLIDO` varchar(15),IN `USUARIO` varchar(10),IN `CONTRASENA` varchar(10))
BEGIN
	INSERT INTO usuario (US_CI,US_NOMBRE,US_APELLIDO,US_USUARIO,US_CONTRASENA) VALUES (CEDULA,NOMBRE,APELLIDO,USUARIO,CONTRASENA);

END

CREATE   PROCEDURE `ModificarCirugia`(IN `CEDULA` bigint,IN `NOMBRE` varchar(15),IN `DESCRIPCION` varchar(15))
BEGIN
	UPDATE cirugia SET  CI_NOMBRE=NOMBRE, CI_DESCRIPCION=DESCRIPCION
  where CI_ID=CEDULA;
END

CREATE   PROCEDURE `ModificarCirugiaCirujano`(IN `HONORARIOS` float,IN `CIRUJANO` bigint,IN `CIRUGIA` bigint)
BEGIN
	UPDATE cirugia_cirujano SET CC_HONORARIOS=HONORARIOS
  WHERE CC_FK_CIRUGIA = CIRUGIA AND CC_FK_CIRUJANO = CIRUJANO;
END	

CREATE   PROCEDURE `ModificarCirugiaPaquteF`(IN `ID` bigint,IN `PROTESIS` float,IN `FECHA_OPERACION` date,IN `CIRUGIA` bigint,IN `PAQUETE` bigint)
BEGIN
	UPDATE cirugia_paquete_f SET CP_MONTO_PROTESIS=PROTESIS, CP_FECHA_OPERACION=FECHA_OPERACION,CP_CIRUGIA_FK=CIRUGIA,CP_PAQUETEF_FK=PAQUETE 
WHERE CP_ID=ID;
END

CREATE   PROCEDURE `ModificarCirujano`(IN `ID` varchar(30),IN `PRIMERNOMBRE` varchar(30),IN `SEGUNDONOMBRE` varchar(30),`PRIMERAPELLIDO` varchar(30),`SEGUNDOAPELLIDO` varchar(30),`TELEFONOMOVIL` varchar(10),`TELEFONOFIJO` varchar(10),`CORREO` varchar(30))
BEGIN
	UPDATE cirujano SET AU_PRIMER_NOMBRE=PRIMERNOMBRE, AU_SEGUNDO_NOMBRE=SEGUNDONOMBRE, AU_PRIMER_APELLIDO=PRIMERAPELLIDO,AU_SEGUNDO_APELLIDO=SEGUNDOAPELLIDO,AU_TELEFONO_MOVIL=TELEFONOMOVIL,AU_TELEFONO_FIJO=TELEFONOFIJO,AU_CORREO=CORREO
WHERE AU_CI=ID;
END

CREATE   PROCEDURE `ModificarPaciente`(IN `CEDULA`bigint ,IN `PRIMERNOMBRE`varchar(15) ,IN `SEGUNDONOMBRE`varchar(15), IN`PRIMERAPELLIDO`varchar(15) ,IN`SEGUNDOAPELLIDO`varchar(15) ,IN`TELEFONOFIJO`varchar(10) ,IN`TELEFONOMOVIL`varchar(10) ,IN`CORREO`varchar(100))
BEGIN
	UPDATE paciente SET PA_PRIMER_NOMBRE=PRIMERNOMBRE, PA_SEGUNDO_NOMBRE=SEGUNDONOMBRE,
PA_PRIMER_APELLIDO=PRIMERAPELLIDO, PA_SEGUNDO_APELLIDO=SEGUNDOAPELLIDO,
PA_TELEFONO_FIJO=TELEFONOFIJO, PA_TELEFONO_MOVIL=TELEFONOMOVIL, PA_CORREO=CORREO
WHERE PA_CI=CEDULA; 
END

CREATE   PROCEDURE `ModificarPago`(IN `ID` bigint,IN `MONTO` float,IN `NOMBRE` varchar(15),IN `PACIENTE` bigint)
BEGIN
	UPDATE pagos SET PA_MONTO=MONTO,PA_NOMBRE=NOMBRE,PA_PACIENTE_FK=PACIENTE
WHERE PA_ID=ID;

END

CREATE   PROCEDURE `ModificarPaqueteFinanciero`(IN`ID`bigint ,IN`FECHA_PAQUETE` date ,IN`FECHA_LIMITE` date,IN`CIRUJANO`bigint ,IN`PACIENTE` bigint)
BEGIN
	UPDATE paquete_financiero SET PF_FECHA_PAQUETE=FECHA_PAQUETE,PF_FECHA_LIMITE=FECHA_LIMITE,PF_CIRUJANO_FK=CIRUJANO,PF_PACIENTE_FK=PACIENTE 
WHERE PF_ID=ID;
END

CREATE   PROCEDURE `ModificarPersonalCirugia`(IN `ID` bigint,IN `CIRUGIA_PAQUETE` bigint,IN `PERSONAL` bigint,IN `ESPECIALIZACION` varchar(10))
BEGIN
	UPDATE personal_cirugia SET PC_CIRUGIA_PAQUETE_FK=CIRUGIA_PAQUETE,PC_PERSONAL_FK=PERSONAL,PC_ESPECIALIZACION=ESPECIALIZACION
WHERE PC_ID=ID;

END

CREATE   PROCEDURE `ModificarPersonalQuirurgico`(IN `CI` bigint,IN `PRIMERNOMBRE` varchar(30),IN `SEGUNDONOMBRE` varchar(30),IN `PRIMERAPELLIDO` varchar(30),IN `SEGUNDOAPELLIDO` varchar(30),IN `ESPECIALIZACION` varchar(10),IN `TELEFONO` varchar(10),IN `CORREO` varchar(30))
BEGIN
	UPDATE personal_quirurjico SET PQ_PRIMER_NOMBRE=PRIMERNOMBRE,PQ_SEGUNDO_NOMBRE=SEGUNDONOMBRE,PQ_PRIMER_APELLIDO=PRIMERAPELLIDO,PQ_SEGUNDO_APELLIDO=SEGUNDOAPELLIDO,PQ_ESPECIALIZACION=ESPECIALIZACION,PQ_TELEFONO_FIJO=TELEFONO,PQ_CORREO=CORREO
WHERE PQ_CI=CI;

END	

CREATE   PROCEDURE `ModificarTransferencia`(IN `ID` bigint,IN `MONTO` float,IN `PACIENTE_OTORGA` bigint,IN `PACIENTE_RECIBE` bigint)
BEGIN
	UPDATE transferencia SET TR_MONTO=MONTO,TR_PACIENTE_OTORGA_FK=PACIENTE_OTORGA,TR_PACIENTE_RECIBE_FK=PACIENTE_RECIBE
WHERE TR_ID=ID;

END

CREATE   PROCEDURE `ObtenerCirugiaCirujano`(IN `cedula` bigint)
BEGIN
	select c.CI_NOMBRE,cc.CC_HONORARIOS, cc.CC_FK_CIRUGIA, cc.CC_FK_CIRUJANO from cirugia_cirujano cc, cirugia c 
  where cc.CC_FK_CIRUJANO = cedula and cc.CC_STATUS = 1 and cc.CC_FK_CIRUGIA = c.CI_ID;
END

CREATE   PROCEDURE `ObtenerCirugias`()
BEGIN
	Select ci_nombre,CI_ID from cirugia; 

END

CREATE   PROCEDURE `ObtenerCirugiasPaciente`(IN `idPaciente` bigint)
BEGIN

select c.CP_ID, ci.CI_NOMBRE, cj.AU_PRIMER_NOMBRE as nombreCirujano,c.CP_FECHA_OPERACION,pa.PA_CI,c.CP_MONTO_CIRUJANO
from cirugia_paquete_f c, cirugia ci, cirujano cj, paquete_financiero pf, paciente pa
where c.CP_CIRUGIA_FK = ci.CI_ID and cj.AU_CI = c.PF_CIRUJANO_FK and pf.PF_ID = c.CP_PAQUETEF_FK and pa.PA_CI = pf.PF_PACIENTE_FK and pa.PA_CI = idPaciente and c.CP_Status != 0 ;

END

CREATE   PROCEDURE `ObtenerCirujanosCirugia`(IN `idCirugia` bigint(20))
BEGIN
	Select concat(c.AU_PRIMER_NOMBRE,' ',c.AU_PRIMER_APELLIDO) as nombre, c.AU_CI 
  from cirujano c,cirugia_cirujano cc  
	where cc.CC_FK_CIRUGIA = idCirugia and 
				cc.CC_FK_CIRUJANO = c.AU_CI GROUP BY nombre;

END

CREATE   PROCEDURE `ObtenerHonorarioCirugiaCirujano`(IN `idCirugia` bigint(20),IN `idCirujano` bigint(20))
BEGIN
	SELECT cc.CC_ID , cc.CC_HONORARIOS from cirugia_cirujano cc where cc.CC_FK_CIRUGIA = idCirugia and cc.CC_FK_CIRUJANO = idCirujano and cc.CC_STATUS = 1;

END

CREATE   PROCEDURE `ObtenerInformacionCirujano`(IN `cedula` bigint)
BEGIN
	select c.AU_PRIMER_NOMBRE,c.AU_SEGUNDO_NOMBRE,c.AU_PRIMER_APELLIDO,c.AU_SEGUNDO_APELLIDO,c.AU_TELEFONO_FIJO,c.AU_TELEFONO_MOVIL,c.AU_CORREO 
	from cirujano c where c.AU_CI = cedula;
END

CREATE   PROCEDURE `ObtenerInformacionPaciente`(IN `Cedula` bigint)
BEGIN
	select p.PA_PRIMER_NOMBRE, p.PA_SEGUNDO_NOMBRE, p.PA_PRIMER_APELLIDO, p.PA_SEGUNDO_APELLIDO, p.PA_TELEFONO_FIJO, p.PA_TELEFONO_MOVIL, p.PA_CORREO 
  from paciente p where p.PA_CI = cedula;
END

CREATE   PROCEDURE `ObtenerPagosPaciente`(IN `IDPACIENTE` bigint)
BEGIN
	SELECT PA_ID,PA_MONTO,PA_FECHA FROM pagos WHERE PA_PACIENTE_FK = IDPACIENTE;

END

CREATE   PROCEDURE `ObtenerPersonalQ`()
BEGIN
		SELECT CONCAT(pq.PQ_PRIMER_NOMBRE," ",pq.PQ_PRIMER_APELLIDO),PQ_CI from personal_quirurjico pq;

END

CREATE   PROCEDURE `ValidacionPacienteExistente`(IN `CEDULA` bigint,OUT `resultado` bigint)
BEGIN
	SELECT PA_CI into resultado from paciente WHERE PA_CI = cedula;
	IF (resultado=cedula) THEN
			set resultado = 1;
	ELSE	set resultado = 0;
	END if;
END

CREATE   PROCEDURE `ValidarPagoExistente`(IN `IDPAGO` bigint,OUT `RESULTADO` bigint)
BEGIN
	SELECT PA_ID INTO RESULTADO FROM pagos WHERE PA_ID = IDPAGO;
IF( RESULTADO = IDPAGO) THEN
	set RESULTADO = 1;
ELSE set RESULTADO = 0;
end IF;
END

